- name: shipping component
  hosts: shipping
  become: yes
  tasks:
  - name: installing maven
    ansible.builtin.yum:
    name: maven
    state: installed

  - name: check user exist or not
    ansible.builtin.command: id roboshop
    register: out
    ignore_errors: true

  - when: out.rc !=0
    name: create user 
    become: yes
    ansible.builtin.user: 
      name: roboshop
  
  - name: check dir exist or not
    ansible.builtin.stat:
    path: /app
  register: directory

  - name: print the directory stats
    ansible.builtin.debug:
      msg: "output: {{directory}}"

  - when: directory.stat.exists == False
    name: create dir
    ansible.builtin.file:
      path: /app
      state: directory

  - name: Downloading zip
    ansible.builtin.get_url:
      url: curl -L -o /tmp/shipping.zip https://roboshop-builds.s3.amazonaws.com/shipping.zip
      dest: /tmp

  - name: unzip roboshop
    ansible.builtin.unarchive:
      src: /tmp/shipping.zip
      dest: /app
      remote_src: yes

  - name: mvn clean package
    ansible.buitin.command: mvn clean package
      args: 
        chdir: /app
  
  - name: moving jar file
    ansible.builtin.command: mv target/shipping-1.0.jar shipping.jar
      args: 
        chdir: /app


  - name: copy shipping service
    ansible.builtin.copy:
      src: shipping.service
      dest: /etc/systemd/system/shipping.service

  - name: deamon reload
    ansible.builtin.systemd:
      daemon_reload: true

  - name: Install MySQL client
    ansible.builtin.yum:
      name: mysql
      state: installed

  - name: load mysql schema
    ansible.builtin.shell: mysql -h mysql.devopsbysreekanth.online -uroot -pRoboShop@1 < /app/schema/shipping.sql 
  
  - name: restart shipping
    ansible.builtin.service:
      name: shipping
      state: restarted
      enabled: true
